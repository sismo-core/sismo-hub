name: Update Groups Daily Prod

on:
  workflow_dispatch:
  schedule:
    - cron: "0 13 * * *"
jobs:
  update:
    name: Update Groups Daily Prod
    runs-on: ubuntu-latest
    environment:
      name: prod
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Update groups and send on-chain
        uses: ./.github/actions/update-groups-send-on-chain
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: ${{ secrets.AWS_EXECUTION_ROLE }}
          sh-s3-data-bucket-name: "sismo-prod-hub-data"
          sh-s3-data-endpoint: "https://sismo-prod-hub-data.s3.eu-west-1.amazonaws.com"
          sh-dynamodb-global-table-name: sismo-prod-hub-global-table
          sh-default-configuration-env: prod
          sh-relay-defender-api-keys: ${{ secrets.SH_RELAY_DEFENDER_API_KEYS }}
          sh-generate-groups-frequency: daily
          sh-last-generation-time-interval: "43200"
          # sh-additional-params: "--dry-run"
          decentralized-subgraph-api-key: ${{ secrets.DECENTRALIZED_SUBGRAPH_API_KEY }}
          google-application-credentials: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          sh-attesters: hydra-s1-accountbound
          sh-attesters-networks: polygon gnosis
          sh-offchain-registry-tree-networks: gnosis
          sh-ignore-resolving-errors: "true"
          hive-api-key: ${{ secrets.HIVE_API_KEY }}
          alchemy-api-key: ${{ secrets.ALCHEMY_API_KEY }}
          twitter-api-key: ${{ secrets.TWITTER_API_KEY }}
          json-rpc-url: ${{ secrets.JSON_RPC_URL }}
          discord-webhook: ${{ secrets.DISCORD_WEBHOOK }}
          github-token: ${{ secrets.SH_GITHUB_TOKEN }}
          transpose-api-key: ${{ secrets.TRANSPOSE_API_KEY }}
          farcaster-api-key: ${{ secrets.FARCASTER_API_KEY }}
          dune-api-key: ${{secrets.DUNE_API_KEY}}
